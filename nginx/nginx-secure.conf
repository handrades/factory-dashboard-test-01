# Secure Nginx Configuration for Factory Dashboard
# Includes SSL/TLS, security headers, and performance optimizations

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# SSL session cache
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;

# Security headers map
map $sent_http_content_type $csp_header {
    default "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https: data:; connect-src 'self' ws: wss:; object-src 'none'; base-uri 'self'; form-action 'self';";
    ~^text/html "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https: data:; connect-src 'self' ws: wss:; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;";
}

# HTTP to HTTPS redirect server
server {
    listen 80;
    server_name factory-dashboard.local localhost;
    
    # Security headers even for HTTP
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name factory-dashboard.local localhost;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_ecdh_curve secp384r1;
    
    # OCSP Stapling (disabled for self-signed certificates)
    # ssl_stapling on;
    # ssl_stapling_verify on;
    # ssl_trusted_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    # resolver 8.8.8.8 8.8.4.4 valid=300s;
    # resolver_timeout 5s;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy $csp_header always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Remove server signature
    server_tokens off;
    
    # Connection limits
    limit_conn conn_limit_per_ip 20;
    
    # Document root
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Logging
    access_log /var/log/nginx/factory-dashboard-access.log combined;
    error_log /var/log/nginx/factory-dashboard-error.log warn;
    
    # Main application
    location / {
        # Rate limiting for general requests
        limit_req zone=general burst=50 nodelay;
        
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        location ~* \.html$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }
    
    # API endpoints
    location /api/ {
        # Rate limiting for API requests
        limit_req zone=api burst=200 nodelay;
        
        # Proxy to backend services
        proxy_pass http://backend_services;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Authentication endpoints (stricter rate limiting)
    location /api/auth/ {
        # Strict rate limiting for authentication
        limit_req zone=login burst=10 nodelay;
        
        # Additional security headers for auth endpoints
        add_header X-Content-Type-Options nosniff always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        
        proxy_pass http://auth_service;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Shorter timeouts for auth
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # WebSocket support for real-time data
    location /ws/ {
        proxy_pass http://websocket_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }
    
    # Static assets with long-term caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Security headers for static assets
        add_header X-Content-Type-Options nosniff always;
        
        # Gzip compression
        gzip_static on;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Security.txt for responsible disclosure
    location /.well-known/security.txt {
        return 200 "Contact: security@factory-dashboard.local\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: en\n";
        add_header Content-Type text/plain;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|config|conf|log|sql|bak|backup|old)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common attack patterns
    location ~* (eval\(|base64_decode|gzinflate|file_get_contents|fopen|fwrite|phpinfo) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 400 401 403 404 /error.html;
    error_page 500 502 503 504 /error.html;
    
    location = /error.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Upstream backend services
upstream backend_services {
    least_conn;
    server queue-consumer:8080 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream auth_service {
    least_conn;
    server auth-service:3005 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream websocket_service {
    least_conn;
    server dashboard:3000 max_fails=3 fail_timeout=30s;
}

# Additional security server for admin interface (if needed)
server {
    listen 8443 ssl http2;
    server_name admin.factory-dashboard.local;
    
    # SSL Configuration (same as main server)
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Enhanced security headers for admin interface
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; object-src 'none';" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    
    # IP whitelist for admin access (uncomment and configure as needed)
    # allow 192.168.1.0/24;
    # allow 10.0.0.0/8;
    # deny all;
    
    # Very strict rate limiting for admin
    limit_req zone=login burst=3 nodelay;
    
    # Admin interface proxy
    location / {
        proxy_pass http://admin_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}